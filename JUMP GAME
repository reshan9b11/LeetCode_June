class Solution {
public:
    int jump(vector<int>& nums) {
        if(nums.size()==0){
            return {};
        }
        int max=nums[0];
        int step=nums[0];
        int jump=1;
        for(int i=1;i<nums.size();i++){
            if(i==nums.size()-1) 
            {return jump;}
            
            max=(max > i+nums[i]) ? max:i+nums[i];
            step--;
            if(step==0){
                jump++;
                if(i>=max){
                    return 0;
                }
                step=max-i;
            }
            
        }
        return 0;
        
        
        
    }
};

// CAN JUMP

class Solution {
public:
    bool canJump(vector<int>& nums) {
        int i=0;
        for(int reach=0; i<nums.size() && i<=reach; i++)
            reach = max(reach, i + nums[i]);
        return i == nums.size();
    }
};
