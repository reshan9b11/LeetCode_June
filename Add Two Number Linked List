/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* result=nullptr;
        ListNode* curr=nullptr;
        ListNode* next=nullptr;
        ListNode* prev=nullptr;
        int c=0,sum;
    
        
            while(l1!=nullptr || l2!=nullptr){
            sum=c+ (l1?l1->val:0) + (l2?l2->val:0);
                c=(sum>=10) ? 1:0;
                
               
                
                if(curr==nullptr){
                    curr=new ListNode(sum%10);
                    result=curr;
                }else{
                curr->next=new ListNode(sum%10);
                curr=curr->next;
                }
                
                if(l1!=nullptr){
                    l1=l1->next;
                }
                if(l2!=nullptr){
                    l2=l2->next;
                }
        }
        if(c>0){
            curr->next=new ListNode(c);
        }
        return result;
        
    }
};
