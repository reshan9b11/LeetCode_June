class Solution {
public:
    vector<int> largestDivisibleSubset(vector<int>& nums) {
        
        if(nums.size()<=1){
            return nums;
        }
       vector<int> result; 
        sort(nums.begin(),nums.end());
        vector<int> div(nums.size(),1);
         vector<int> prev(nums.size(),-1);
   int max=0;
        for(int i=1;i<nums.size();i++){
            
            for(int j=0;j<i;j++){
                
                if(nums[i]%nums[j]==0 && div[i]<div[j]+1){
                    
                    
                        div[i]=div[j]+1;
                        prev[i]=j;
                   
                }
            }
            
            if(div[max]<div[i]){
                max=i;
            }
        }
        
        while(max>=0){
            
            result.push_back(nums[max]);
            max=prev[max];
            
        }
        return result;
    }
};
