/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
     
        if(root==nullptr){
            return nullptr;
        }
        TreeNode *temp=root->left;
        root->left=root->right;
        root->right=temp;
        
        invertTree(root->left);
        invertTree(root->right);
        return root;
    }
        
        
        // queue<TreeNode*> q;
        // q.push(root);
        // while(!q.empty()){
        // //TreeNode* current_node=q.back();
        //     q.pop();
        // TreeNode *temp=root->left;
        // root->left=root->right;
        // root->right=temp;
        // if(root->left!=nullptr){
        //     q.push(root->left);
        // }
        // if(root->right!=nullptr){
        //     q.push(root->right);
        // }
        // }
        // return root;
    //}
};
