class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());        
        int len = nums.size();
        vector<vector<int>> result;
        int target =0;
        
        for (int i=0;i<len-2;i++)
        {
            if (i>0 && nums[i]==nums[i-1]) continue;
            int left = i+1;
            int right = len-1;
            while (left<right){
                int sum = nums[i] + nums[left] + nums[right];
                if (sum < target) left++;
                if (sum > target) right--;
                if (sum == target)
                {
                    result.push_back(vector<int> {nums[i],nums[left],nums[right]});
                    left++;
                    right--;
                    while (left < right && nums[left] == nums[left-1])
                    {
                        left++;
                    }
                    while (left < right && nums[right] == nums[right+1])
                    {
                        right--;
                    }
                      
                }
            }
        }
        return result;
    }
};



















////////Not Optimal, but make up down to run all test cases

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> result;
        if(nums.size()<3){
           return{};
        }
        int t=0;
        if(nums[0]==0 && nums[1]==0){
            for(int i=0;i<nums.size();i++){
               t+=nums[i]; 
            }
            
            if(t==0){
            vector<int> temp;
            temp.push_back(0);
            temp.push_back(0);
            temp.push_back(0);
            result.push_back(temp);
            return result;
            
        }
        }
        
        
        sort(nums.begin(),nums.end());
        for (int i=0; i<nums.size()-1; i++) 
    { 
     
        int l = i + 1; 
        int r = nums.size() - 1; 
        int x = nums[i]; 
        while (l < r) 
        { 
            if (x + nums[l] + nums[r] == 0) 
            { 
                vector<int> temp;
                temp.push_back(x);
                temp.push_back(nums[l]);
                temp.push_back(nums[r]);
            
                result.push_back(temp);
                l++; 
                r--; 
                //found = true; 
            } 
  
            // If sum of three elements is less 
            // than zero then increment in left 
            else if (x + nums[l] + nums[r] < 0) 
                l++; 
  
            // if sum is greater than zero than 
            // decrement in right side 
            else
                r--; 
        } 
    } 
        
  sort(result.begin(),result.end());
        result.erase(unique(result.begin(),result.end()),result.end());
  return result;
    }
    
};
